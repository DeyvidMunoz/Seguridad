

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 03 15:09:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og9 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Generated 05/01/2024 GMT
    28                           ; 
    29                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     008F                     	;# 
   106     0090                     	;# 
   107     0091                     	;# 
   108     0092                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0093                     	;# 
   112     0094                     	;# 
   113     0095                     	;# 
   114     0096                     	;# 
   115     0097                     	;# 
   116     0098                     	;# 
   117     0099                     	;# 
   118     009A                     	;# 
   119     009B                     	;# 
   120     009C                     	;# 
   121     009D                     	;# 
   122     009E                     	;# 
   123     009F                     	;# 
   124     0105                     	;# 
   125     0107                     	;# 
   126     0108                     	;# 
   127     0109                     	;# 
   128     010C                     	;# 
   129     010C                     	;# 
   130     010D                     	;# 
   131     010E                     	;# 
   132     010F                     	;# 
   133     0185                     	;# 
   134     0187                     	;# 
   135     0188                     	;# 
   136     0189                     	;# 
   137     018C                     	;# 
   138     018D                     	;# 
   139     0000                     	;# 
   140     0001                     	;# 
   141     0002                     	;# 
   142     0003                     	;# 
   143     0004                     	;# 
   144     0005                     	;# 
   145     0006                     	;# 
   146     0007                     	;# 
   147     0008                     	;# 
   148     0009                     	;# 
   149     000A                     	;# 
   150     000B                     	;# 
   151     000C                     	;# 
   152     000D                     	;# 
   153     000E                     	;# 
   154     000E                     	;# 
   155     000F                     	;# 
   156     0010                     	;# 
   157     0011                     	;# 
   158     0012                     	;# 
   159     0013                     	;# 
   160     0014                     	;# 
   161     0015                     	;# 
   162     0015                     	;# 
   163     0016                     	;# 
   164     0017                     	;# 
   165     0018                     	;# 
   166     0019                     	;# 
   167     001A                     	;# 
   168     001B                     	;# 
   169     001B                     	;# 
   170     001C                     	;# 
   171     001D                     	;# 
   172     001E                     	;# 
   173     001F                     	;# 
   174     0081                     	;# 
   175     0085                     	;# 
   176     0086                     	;# 
   177     0087                     	;# 
   178     0088                     	;# 
   179     0089                     	;# 
   180     008C                     	;# 
   181     008D                     	;# 
   182     008E                     	;# 
   183     008F                     	;# 
   184     0090                     	;# 
   185     0091                     	;# 
   186     0092                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0093                     	;# 
   190     0094                     	;# 
   191     0095                     	;# 
   192     0096                     	;# 
   193     0097                     	;# 
   194     0098                     	;# 
   195     0099                     	;# 
   196     009A                     	;# 
   197     009B                     	;# 
   198     009C                     	;# 
   199     009D                     	;# 
   200     009E                     	;# 
   201     009F                     	;# 
   202     0105                     	;# 
   203     0107                     	;# 
   204     0108                     	;# 
   205     0109                     	;# 
   206     010C                     	;# 
   207     010C                     	;# 
   208     010D                     	;# 
   209     010E                     	;# 
   210     010F                     	;# 
   211     0185                     	;# 
   212     0187                     	;# 
   213     0188                     	;# 
   214     0189                     	;# 
   215     018C                     	;# 
   216     018D                     	;# 
   217     0000                     	;# 
   218     0001                     	;# 
   219     0002                     	;# 
   220     0003                     	;# 
   221     0004                     	;# 
   222     0005                     	;# 
   223     0006                     	;# 
   224     0007                     	;# 
   225     0008                     	;# 
   226     0009                     	;# 
   227     000A                     	;# 
   228     000B                     	;# 
   229     000C                     	;# 
   230     000D                     	;# 
   231     000E                     	;# 
   232     000E                     	;# 
   233     000F                     	;# 
   234     0010                     	;# 
   235     0011                     	;# 
   236     0012                     	;# 
   237     0013                     	;# 
   238     0014                     	;# 
   239     0015                     	;# 
   240     0015                     	;# 
   241     0016                     	;# 
   242     0017                     	;# 
   243     0018                     	;# 
   244     0019                     	;# 
   245     001A                     	;# 
   246     001B                     	;# 
   247     001B                     	;# 
   248     001C                     	;# 
   249     001D                     	;# 
   250     001E                     	;# 
   251     001F                     	;# 
   252     0081                     	;# 
   253     0085                     	;# 
   254     0086                     	;# 
   255     0087                     	;# 
   256     0088                     	;# 
   257     0089                     	;# 
   258     008C                     	;# 
   259     008D                     	;# 
   260     008E                     	;# 
   261     008F                     	;# 
   262     0090                     	;# 
   263     0091                     	;# 
   264     0092                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0093                     	;# 
   268     0094                     	;# 
   269     0095                     	;# 
   270     0096                     	;# 
   271     0097                     	;# 
   272     0098                     	;# 
   273     0099                     	;# 
   274     009A                     	;# 
   275     009B                     	;# 
   276     009C                     	;# 
   277     009D                     	;# 
   278     009E                     	;# 
   279     009F                     	;# 
   280     0105                     	;# 
   281     0107                     	;# 
   282     0108                     	;# 
   283     0109                     	;# 
   284     010C                     	;# 
   285     010C                     	;# 
   286     010D                     	;# 
   287     010E                     	;# 
   288     010F                     	;# 
   289     0185                     	;# 
   290     0187                     	;# 
   291     0188                     	;# 
   292     0189                     	;# 
   293     018C                     	;# 
   294     018D                     	;# 
   295     0000                     	;# 
   296     0001                     	;# 
   297     0002                     	;# 
   298     0003                     	;# 
   299     0004                     	;# 
   300     0005                     	;# 
   301     0006                     	;# 
   302     0007                     	;# 
   303     0008                     	;# 
   304     0009                     	;# 
   305     000A                     	;# 
   306     000B                     	;# 
   307     000C                     	;# 
   308     000D                     	;# 
   309     000E                     	;# 
   310     000E                     	;# 
   311     000F                     	;# 
   312     0010                     	;# 
   313     0011                     	;# 
   314     0012                     	;# 
   315     0013                     	;# 
   316     0014                     	;# 
   317     0015                     	;# 
   318     0015                     	;# 
   319     0016                     	;# 
   320     0017                     	;# 
   321     0018                     	;# 
   322     0019                     	;# 
   323     001A                     	;# 
   324     001B                     	;# 
   325     001B                     	;# 
   326     001C                     	;# 
   327     001D                     	;# 
   328     001E                     	;# 
   329     001F                     	;# 
   330     0081                     	;# 
   331     0085                     	;# 
   332     0086                     	;# 
   333     0087                     	;# 
   334     0088                     	;# 
   335     0089                     	;# 
   336     008C                     	;# 
   337     008D                     	;# 
   338     008E                     	;# 
   339     008F                     	;# 
   340     0090                     	;# 
   341     0091                     	;# 
   342     0092                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0093                     	;# 
   346     0094                     	;# 
   347     0095                     	;# 
   348     0096                     	;# 
   349     0097                     	;# 
   350     0098                     	;# 
   351     0099                     	;# 
   352     009A                     	;# 
   353     009B                     	;# 
   354     009C                     	;# 
   355     009D                     	;# 
   356     009E                     	;# 
   357     009F                     	;# 
   358     0105                     	;# 
   359     0107                     	;# 
   360     0108                     	;# 
   361     0109                     	;# 
   362     010C                     	;# 
   363     010C                     	;# 
   364     010D                     	;# 
   365     010E                     	;# 
   366     010F                     	;# 
   367     0185                     	;# 
   368     0187                     	;# 
   369     0188                     	;# 
   370     0189                     	;# 
   371     018C                     	;# 
   372     018D                     	;# 
   373                           
   374                           	psect	idataBANK0
   375     047E                     __pidataBANK0:
   376                           
   377                           ;initializer for keypad_getkey@F1301
   378     047E  3431               	retlw	49
   379     047F  3432               	retlw	50
   380     0480  3433               	retlw	51
   381     0481  3441               	retlw	65
   382     0482  3434               	retlw	52
   383     0483  3435               	retlw	53
   384     0484  3436               	retlw	54
   385     0485  3442               	retlw	66
   386     0486  3437               	retlw	55
   387     0487  3438               	retlw	56
   388     0488  3439               	retlw	57
   389     0489  3443               	retlw	67
   390     048A  342A               	retlw	42
   391     048B  3430               	retlw	48
   392     048C  3423               	retlw	35
   393     048D  3444               	retlw	68
   394                           
   395                           	psect	strings
   396     0003                     __pstrings:
   397     0003                     stringtab:
   398     0003                     __stringtab:
   399     0003                     stringcode:	
   400                           ;	String table - string pointers are 1 byte each
   401                           
   402     0003                     stringdir:
   403     0003  3000               	movlw	high stringdir
   404     0004  008A               	movwf	10
   405     0005  0804               	movf	4,w
   406     0006  0A84               	incf	4,f
   407     0007  0782               	addwf	2,f
   408     0008                     __stringbase:
   409     0008  3400               	retlw	0
   410     0009                     __end_of__stringtab:
   411     0009                     _password:
   412     0009  3431               	retlw	49
   413     000A  3431               	retlw	49
   414     000B  3431               	retlw	49
   415     000C  3431               	retlw	49
   416     000D  3436               	retlw	54
   417     000E  3430               	retlw	48
   418     000F  3400               	retlw	0
   419     0010  3400               	retlw	0
   420     0011                     __end_of_password:
   421     0006                     _PORTB	set	6
   422     0007                     _PORTCbits	set	7
   423     0007                     _PORTC	set	7
   424     0005                     _PORTA	set	5
   425     0005                     _PORTAbits	set	5
   426     0081                     _OPTION_REGbits	set	129
   427     0086                     _TRISB	set	134
   428     0087                     _TRISC	set	135
   429     0085                     _TRISA	set	133
   430     008F                     _OSCCON	set	143
   431     0188                     _ANSEL	set	392
   432     0189                     _ANSELH	set	393
   433     0011                     STR_5:
   434     0011  3453               	retlw	83	;'S'
   435     0012  3469               	retlw	105	;'i'
   436     0013  3473               	retlw	115	;'s'
   437     0014  3474               	retlw	116	;'t'
   438     0015  3465               	retlw	101	;'e'
   439     0016  346D               	retlw	109	;'m'
   440     0017  3461               	retlw	97	;'a'
   441     0018  3420               	retlw	32	;' '
   442     0019  3442               	retlw	66	;'B'
   443     001A  346C               	retlw	108	;'l'
   444     001B  346F               	retlw	111	;'o'
   445     001C  3471               	retlw	113	;'q'
   446     001D  3475               	retlw	117	;'u'
   447     001E  3465               	retlw	101	;'e'
   448     001F  3461               	retlw	97	;'a'
   449     0020  3464               	retlw	100	;'d'
   450     0021  346F               	retlw	111	;'o'
   451     0022  3400               	retlw	0
   452     0023                     STR_4:
   453     0023  3443               	retlw	67	;'C'
   454     0024  346C               	retlw	108	;'l'
   455     0025  3461               	retlw	97	;'a'
   456     0026  3476               	retlw	118	;'v'
   457     0027  3465               	retlw	101	;'e'
   458     0028  3420               	retlw	32	;' '
   459     0029  3449               	retlw	73	;'I'
   460     002A  346E               	retlw	110	;'n'
   461     002B  3463               	retlw	99	;'c'
   462     002C  346F               	retlw	111	;'o'
   463     002D  3472               	retlw	114	;'r'
   464     002E  3472               	retlw	114	;'r'
   465     002F  3465               	retlw	101	;'e'
   466     0030  3463               	retlw	99	;'c'
   467     0031  3474               	retlw	116	;'t'
   468     0032  3461               	retlw	97	;'a'
   469     0033  3400               	retlw	0
   470     0034                     STR_3:
   471     0034  3443               	retlw	67	;'C'
   472     0035  346C               	retlw	108	;'l'
   473     0036  3461               	retlw	97	;'a'
   474     0037  3476               	retlw	118	;'v'
   475     0038  3465               	retlw	101	;'e'
   476     0039  3420               	retlw	32	;' '
   477     003A  3443               	retlw	67	;'C'
   478     003B  346F               	retlw	111	;'o'
   479     003C  3472               	retlw	114	;'r'
   480     003D  3472               	retlw	114	;'r'
   481     003E  3465               	retlw	101	;'e'
   482     003F  3463               	retlw	99	;'c'
   483     0040  3474               	retlw	116	;'t'
   484     0041  3461               	retlw	97	;'a'
   485     0042  3400               	retlw	0
   486     0043                     STR_2:
   487     0043  3450               	retlw	80	;'P'
   488     0044  3472               	retlw	114	;'r'
   489     0045  3465               	retlw	101	;'e'
   490     0046  3473               	retlw	115	;'s'
   491     0047  3473               	retlw	115	;'s'
   492     0048  3420               	retlw	32	;' '
   493     0049  3461               	retlw	97	;'a'
   494     004A  3420               	retlw	32	;' '
   495     004B  344B               	retlw	75	;'K'
   496     004C  3465               	retlw	101	;'e'
   497     004D  3479               	retlw	121	;'y'
   498     004E  3400               	retlw	0
   499     004F                     STR_1:
   500     004F  3442               	retlw	66	;'B'
   501     0050  3469               	retlw	105	;'i'
   502     0051  3465               	retlw	101	;'e'
   503     0052  346E               	retlw	110	;'n'
   504     0053  3476               	retlw	118	;'v'
   505     0054  3465               	retlw	101	;'e'
   506     0055  346E               	retlw	110	;'n'
   507     0056  3469               	retlw	105	;'i'
   508     0057  3464               	retlw	100	;'d'
   509     0058  346F               	retlw	111	;'o'
   510     0059  3400               	retlw	0
   511                           
   512                           	psect	cinit
   513     07E5                     start_initialization:	
   514                           ; #config settings
   515                           
   516     07E5                     __initialization:
   517                           
   518                           ; Initialize objects allocated to BANK0
   519     07E5  1383               	bcf	3,7	;select IRP bank0
   520     07E6  3049               	movlw	low (__pdataBANK0+16)
   521     07E7  00FD               	movwf	btemp+-1
   522     07E8  3004               	movlw	high __pidataBANK0
   523     07E9  00FE               	movwf	btemp
   524     07EA  307E               	movlw	low __pidataBANK0
   525     07EB  00FF               	movwf	btemp+1
   526     07EC  3039               	movlw	low __pdataBANK0
   527     07ED  0084               	movwf	4
   528     07EE  120A  118A  2492   	fcall	init_ram0
   529                           
   530                           ; Clear objects allocated to BANK0
   531     07F1  01C9               	clrf	__pbssBANK0& (0+127)
   532     07F2  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   533     07F3  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   534     07F4  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   535     07F5  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   536     07F6  01CE               	clrf	(__pbssBANK0+5)& (0+127)
   537     07F7  01CF               	clrf	(__pbssBANK0+6)& (0+127)
   538     07F8  01D0               	clrf	(__pbssBANK0+7)& (0+127)
   539     07F9  01D1               	clrf	(__pbssBANK0+8)& (0+127)
   540     07FA  01D2               	clrf	(__pbssBANK0+9)& (0+127)
   541     07FB  01D3               	clrf	(__pbssBANK0+10)& (0+127)
   542     07FC                     end_of_initialization:	
   543                           ;End of C runtime variable initialization code
   544                           
   545     07FC                     __end_of__initialization:
   546     07FC  0183               	clrf	3
   547     07FD  120A  118A  2EBC   	ljmp	_main	;jump to C main() function
   548                           
   549                           	psect	bssBANK0
   550     0049                     __pbssBANK0:
   551     0049                     _intentos:
   552     0049                     	ds	2
   553     004B                     _idx:
   554     004B                     	ds	1
   555     004C                     _pass_user:
   556     004C                     	ds	8
   557                           
   558                           	psect	dataBANK0
   559     0039                     __pdataBANK0:
   560     0039                     keypad_getkey@F1301:
   561     0039                     	ds	16
   562                           
   563                           	psect	inittext
   564     048E                     init_fetch0:	
   565                           ;	Called with low address in FSR and high address in W
   566                           
   567     048E  087E               	movf	126,w
   568     048F  008A               	movwf	10
   569     0490  087F               	movf	127,w
   570     0491  0082               	movwf	2
   571     0492                     init_ram0:	
   572                           ;Called with:
   573                           ;	high address of idata address in btemp 
   574                           ;	low address of idata address in btemp+1 
   575                           ;	low address of data in FSR
   576                           ;	high address + 1 of data in btemp-1
   577                           
   578     0492  248E  120A  118A   	fcall	init_fetch0
   579     0495  0080               	movwf	0
   580     0496  0A84               	incf	4,f
   581     0497  0804               	movf	4,w
   582     0498  067D               	xorwf	125,w
   583     0499  1903               	btfsc	3,2
   584     049A  3400               	retlw	0
   585     049B  0AFF               	incf	127,f
   586     049C  1903               	btfsc	3,2
   587     049D  0AFE               	incf	126,f
   588     049E  2C92               	goto	init_ram0
   589                           
   590                           	psect	cstackCOMMON
   591     0070                     __pcstackCOMMON:
   592     0070                     ?_LCD_Init:
   593     0070                     ?_keypad_init:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ??_keypad_init:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_LCD_Clear:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_LCD_Command:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ??_LCD_Command:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     ?_keypad_getkey:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     ??_keypad_getkey:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ?_LCD_Char:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     ??_LCD_Char:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     ?_delay_ms_variable:	
   621                           ; 1 bytes @ 0x0
   622                           
   623     0070                     ?_main:	
   624                           ; 1 bytes @ 0x0
   625                           
   626     0070                     ?_LCD_String:	
   627                           ; 1 bytes @ 0x0
   628                           
   629     0070                     ?_strncmp:	
   630                           ; 1 bytes @ 0x0
   631                           
   632     0070                     strncmp@s2:	
   633                           ; 2 bytes @ 0x0
   634                           
   635     0070                     delay_ms_variable@ms:	
   636                           ; 1 bytes @ 0x0
   637                           
   638                           
   639                           ; 2 bytes @ 0x0
   640     0070                     	ds	1
   641     0071                     strncmp@len:
   642                           
   643                           ; 2 bytes @ 0x1
   644     0071                     	ds	1
   645     0072                     ??_delay_ms_variable:
   646     0072                     LCD_Command@cmd:	
   647                           ; 1 bytes @ 0x2
   648                           
   649     0072                     LCD_Char@dat:	
   650                           ; 1 bytes @ 0x2
   651                           
   652                           
   653                           ; 1 bytes @ 0x2
   654     0072                     	ds	1
   655     0073                     ??_LCD_Init:
   656     0073                     ??_LCD_Clear:	
   657                           ; 1 bytes @ 0x3
   658                           
   659     0073                     ??_strncmp:	
   660                           ; 1 bytes @ 0x3
   661                           
   662     0073                     ??_LCD_String:	
   663                           ; 1 bytes @ 0x3
   664                           
   665     0073                     LCD_String@msg:	
   666                           ; 1 bytes @ 0x3
   667                           
   668                           
   669                           ; 1 bytes @ 0x3
   670     0073                     	ds	1
   671     0074                     ?_LCD_String_xy:
   672     0074                     ?_blink_led:	
   673                           ; 1 bytes @ 0x4
   674                           
   675     0074                     LCD_String_xy@pos:	
   676                           ; 1 bytes @ 0x4
   677                           
   678     0074                     blink_led@on_time:	
   679                           ; 1 bytes @ 0x4
   680                           
   681                           
   682                           ; 2 bytes @ 0x4
   683     0074                     	ds	1
   684     0075                     LCD_String_xy@msg:
   685     0075                     strncmp@s1:	
   686                           ; 1 bytes @ 0x5
   687                           
   688                           
   689                           ; 1 bytes @ 0x5
   690     0075                     	ds	1
   691     0076                     ??_LCD_String_xy:
   692     0076                     LCD_String_xy@row:	
   693                           ; 1 bytes @ 0x6
   694                           
   695     0076                     blink_led@off_time:	
   696                           ; 1 bytes @ 0x6
   697                           
   698                           
   699                           ; 2 bytes @ 0x6
   700     0076                     	ds	1
   701     0077                     LCD_String_xy@location:
   702                           
   703                           ; 1 bytes @ 0x7
   704     0077                     	ds	1
   705     0078                     blink_led@duration:
   706                           
   707                           ; 2 bytes @ 0x8
   708     0078                     	ds	2
   709     007A                     ??_blink_led:
   710                           
   711                           ; 1 bytes @ 0xA
   712     007A                     	ds	2
   713                           
   714                           	psect	cstackBANK0
   715     0020                     __pcstackBANK0:
   716     0020                     blink_led@elapsed_time:
   717     0020                     keypad_getkey@letras:	
   718                           ; 2 bytes @ 0x0
   719                           
   720                           
   721                           ; 16 bytes @ 0x0
   722     0020                     	ds	2
   723     0022                     blink_led@led:
   724                           
   725                           ; 1 bytes @ 0x2
   726     0022                     	ds	14
   727     0030                     keypad_getkey@valor:
   728                           
   729                           ; 1 bytes @ 0x10
   730     0030                     	ds	1
   731     0031                     keypad_getkey@i:
   732                           
   733                           ; 2 bytes @ 0x11
   734     0031                     	ds	2
   735     0033                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x13
   738     0033                     	ds	3
   739     0036                     main@temp_str:
   740                           
   741                           ; 2 bytes @ 0x16
   742     0036                     	ds	2
   743     0038                     main@key:
   744                           
   745                           ; 1 bytes @ 0x18
   746     0038                     	ds	1
   747                           
   748                           	psect	maintext
   749     06BC                     __pmaintext:	
   750 ;;
   751 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   752 ;;
   753 ;; *************** function _main *****************
   754 ;; Defined at:
   755 ;;		line 76 in file "main.c"
   756 ;; Parameters:    Size  Location     Type
   757 ;;		None
   758 ;; Auto vars:     Size  Location     Type
   759 ;;  temp_str        2   22[BANK0 ] unsigned char [2]
   760 ;;  key             1   24[BANK0 ] unsigned char 
   761 ;; Return value:  Size  Location     Type
   762 ;;                  1    wreg      void 
   763 ;; Registers used:
   764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   765 ;; Tracked objects:
   766 ;;		On entry : B00/0
   767 ;;		On exit  : 300/0
   768 ;;		Unchanged: 0/0
   769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   770 ;;      Params:         0       0       0       0       0
   771 ;;      Locals:         0       3       0       0       0
   772 ;;      Temps:          0       3       0       0       0
   773 ;;      Totals:         0       6       0       0       0
   774 ;;Total ram usage:        6 bytes
   775 ;; Hardware stack levels required when called: 3
   776 ;; This function calls:
   777 ;;		_LCD_Char
   778 ;;		_LCD_Clear
   779 ;;		_LCD_Command
   780 ;;		_LCD_Init
   781 ;;		_LCD_String_xy
   782 ;;		_blink_led
   783 ;;		_keypad_getkey
   784 ;;		_keypad_init
   785 ;;		_strncmp
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791     06BC                     _main:	
   792                           ;psect for function _main
   793                           
   794                           
   795                           ;main.c: 79: OSCCON = 0x71;
   796                           
   797                           ;incstack = 0
   798                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   799     06BC  3071               	movlw	113
   800     06BD  1683               	bsf	3,5	;RP0=1, select bank1
   801     06BE  008F               	movwf	15	;volatile
   802                           
   803                           ;main.c: 81: TRISA = 0b11111000;
   804     06BF  30F8               	movlw	248
   805     06C0  0085               	movwf	5	;volatile
   806                           
   807                           ;main.c: 82: ANSELH = 0x00;
   808     06C1  1703               	bsf	3,6	;RP1=1, select bank3
   809     06C2  0189               	clrf	9	;volatile
   810                           
   811                           ;main.c: 83: ANSEL = 0x00;
   812     06C3  0188               	clrf	8	;volatile
   813                           
   814                           ;main.c: 85: PORTA=0x00;
   815     06C4  1283               	bcf	3,5	;RP0=0, select bank0
   816     06C5  1303               	bcf	3,6	;RP1=0, select bank0
   817     06C6  0185               	clrf	5	;volatile
   818                           
   819                           ;main.c: 87: _delay((unsigned long)((10000)*(8000000/4000.0)));
   820     06C7  3066               	movlw	102
   821     06C8  1283               	bcf	3,5	;RP0=0, select bank0
   822     06C9  1303               	bcf	3,6	;RP1=0, select bank0
   823     06CA  00B5               	movwf	??_main+2
   824     06CB  3076               	movlw	118
   825     06CC  00B4               	movwf	??_main+1
   826     06CD  30C0               	movlw	192
   827     06CE  00B3               	movwf	??_main
   828     06CF                     u857:
   829     06CF  0BB3               	decfsz	??_main,f
   830     06D0  2ECF               	goto	u857
   831     06D1  0BB4               	decfsz	??_main+1,f
   832     06D2  2ECF               	goto	u857
   833     06D3  0BB5               	decfsz	??_main+2,f
   834     06D4  2ECF               	goto	u857
   835     06D5  0000               	nop
   836                           
   837                           ;main.c: 89: LCD_Init();
   838     06D6  120A  118A  24E8  120A  118A  	fcall	_LCD_Init
   839                           
   840                           ;main.c: 90: keypad_init();
   841     06DB  120A  118A  2462  120A  118A  	fcall	_keypad_init
   842                           
   843                           ;main.c: 93: LCD_Clear();
   844     06E0  120A  118A  246E  120A  118A  	fcall	_LCD_Clear
   845                           
   846                           ;main.c: 94: LCD_String_xy(0, 0, "Bienvenido");
   847     06E5  01F4               	clrf	LCD_String_xy@pos
   848     06E6  3047               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   849     06E7  00F5               	movwf	LCD_String_xy@msg
   850     06E8  3000               	movlw	0
   851     06E9  120A  118A  24B4  120A  118A  	fcall	_LCD_String_xy
   852                           
   853                           ;main.c: 95: _delay((unsigned long)((2000)*(8000000/4000.0)));
   854     06EE  3015               	movlw	21
   855     06EF  1283               	bcf	3,5	;RP0=0, select bank0
   856     06F0  1303               	bcf	3,6	;RP1=0, select bank0
   857     06F1  00B5               	movwf	??_main+2
   858     06F2  304B               	movlw	75
   859     06F3  00B4               	movwf	??_main+1
   860     06F4  30BD               	movlw	189
   861     06F5  00B3               	movwf	??_main
   862     06F6                     u867:
   863     06F6  0BB3               	decfsz	??_main,f
   864     06F7  2EF6               	goto	u867
   865     06F8  0BB4               	decfsz	??_main+1,f
   866     06F9  2EF6               	goto	u867
   867     06FA  0BB5               	decfsz	??_main+2,f
   868     06FB  2EF6               	goto	u867
   869     06FC  2EFD               	nop2
   870     06FD                     l1310:
   871                           
   872                           ;main.c: 98: LCD_Clear();
   873     06FD  120A  118A  246E  120A  118A  	fcall	_LCD_Clear
   874                           
   875                           ;main.c: 99: LCD_String_xy(0, 0, "Press a Key");
   876     0702  01F4               	clrf	LCD_String_xy@pos
   877     0703  303B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   878     0704  00F5               	movwf	LCD_String_xy@msg
   879     0705  3000               	movlw	0
   880     0706  120A  118A  24B4  120A  118A  	fcall	_LCD_String_xy
   881                           
   882                           ;main.c: 100: LCD_Command(0xC0);
   883     070B  30C0               	movlw	192
   884     070C  120A  118A  2510  120A  118A  	fcall	_LCD_Command
   885                           
   886                           ;main.c: 102: while (idx <7) {
   887     0711  2F36               	goto	l1338
   888     0712                     l1326:	
   889                           ;main.c: 109: break;
   890                           
   891                           
   892                           ;main.c: 112: char temp_str[2];;main.c: 113: temp_str[0] = key;
   893     0712  0838               	movf	main@key,w
   894     0713  00B6               	movwf	main@temp_str
   895                           
   896                           ;main.c: 114: temp_str[1] = '\0';
   897     0714  01B7               	clrf	main@temp_str+1
   898                           
   899                           ;main.c: 117: LCD_Char('*');
   900     0715  302A               	movlw	42
   901     0716  120A  118A  2546  120A  118A  	fcall	_LCD_Char
   902                           
   903                           ;main.c: 118: pass_user[idx++] = key;
   904     071B  1283               	bcf	3,5	;RP0=0, select bank0
   905     071C  1303               	bcf	3,6	;RP1=0, select bank0
   906     071D  084B               	movf	_idx,w
   907     071E  3E4C               	addlw	(low (_pass_user| 0))& (0+255)
   908     071F  0084               	movwf	4
   909     0720  0838               	movf	main@key,w
   910     0721  1383               	bcf	3,7	;select IRP bank0
   911     0722  0080               	movwf	0
   912     0723  3001               	movlw	1
   913     0724  00FF               	movwf	127
   914     0725  087F               	movf	127,w
   915     0726  07CB               	addwf	_idx,f
   916     0727                     l1336:
   917                           
   918                           ;main.c: 122: };main.c: 123: };main.c: 124: _delay((unsigned long)((100)*(8000000/4000.0
      +                          )));
   919     0727  3002               	movlw	2
   920     0728  1283               	bcf	3,5	;RP0=0, select bank0
   921     0729  1303               	bcf	3,6	;RP1=0, select bank0
   922     072A  00B5               	movwf	??_main+2
   923     072B  3004               	movlw	4
   924     072C  00B4               	movwf	??_main+1
   925     072D  30B9               	movlw	185
   926     072E  00B3               	movwf	??_main
   927     072F                     u877:
   928     072F  0BB3               	decfsz	??_main,f
   929     0730  2F2F               	goto	u877
   930     0731  0BB4               	decfsz	??_main+1,f
   931     0732  2F2F               	goto	u877
   932     0733  0BB5               	decfsz	??_main+2,f
   933     0734  2F2F               	goto	u877
   934     0735  2F36               	nop2
   935     0736                     l1338:
   936     0736  3007               	movlw	7
   937     0737  1283               	bcf	3,5	;RP0=0, select bank0
   938     0738  1303               	bcf	3,6	;RP1=0, select bank0
   939     0739  024B               	subwf	_idx,w
   940     073A  1803               	btfsc	3,0
   941     073B  2F4E               	goto	l1340
   942                           
   943                           ;main.c: 104: key = keypad_getkey();
   944     073C  120A  118A  260B  120A  118A  	fcall	_keypad_getkey
   945     0741  00B8               	movwf	main@key
   946                           
   947                           ;main.c: 105: if (key != 0) {
   948     0742  0838               	movf	main@key,w
   949     0743  1903               	btfsc	3,2
   950     0744  2F27               	goto	l1336
   951                           
   952                           ;main.c: 106: if (key == '#') {
   953     0745  3023               	movlw	35
   954     0746  0638               	xorwf	main@key,w
   955     0747  1D03               	btfss	3,2
   956     0748  2F12               	goto	l1326
   957                           
   958                           ;main.c: 108: pass_user[idx] = '\0';
   959     0749  084B               	movf	_idx,w
   960     074A  3E4C               	addlw	(low (_pass_user| 0))& (0+255)
   961     074B  0084               	movwf	4
   962     074C  1383               	bcf	3,7	;select IRP bank0
   963     074D  0180               	clrf	0
   964     074E                     l1340:
   965                           
   966                           ;main.c: 125: };main.c: 128: if (strncmp(pass_user, password, 6) == 0) {
   967     074E  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
   968     074F  00F0               	movwf	strncmp@s2
   969     0750  3006               	movlw	6
   970     0751  00F1               	movwf	strncmp@len
   971     0752  3000               	movlw	0
   972     0753  00F2               	movwf	strncmp@len+1
   973     0754  304C               	movlw	(low (_pass_user| 0))& (0+255)
   974     0755  120A  118A  257C  120A  118A  	fcall	_strncmp
   975     075A  0870               	movf	?_strncmp,w
   976     075B  0471               	iorwf	?_strncmp+1,w
   977     075C  1D03               	btfss	3,2
   978     075D  2F7A               	goto	l1350
   979                           
   980                           ;main.c: 129: LCD_Clear();
   981     075E  120A  118A  246E  120A  118A  	fcall	_LCD_Clear
   982                           
   983                           ;main.c: 130: LCD_String_xy(0, 0, "Clave Correcta");
   984     0763  01F4               	clrf	LCD_String_xy@pos
   985     0764  302C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   986     0765  00F5               	movwf	LCD_String_xy@msg
   987     0766  3000               	movlw	0
   988     0767  120A  118A  24B4  120A  118A  	fcall	_LCD_String_xy
   989                           
   990                           ;main.c: 131: blink_led('V', 500, 500, 3000);
   991     076C  30F4               	movlw	244
   992     076D  00F4               	movwf	blink_led@on_time
   993     076E  3001               	movlw	1
   994     076F  00F5               	movwf	blink_led@on_time+1
   995     0770  30F4               	movlw	244
   996     0771  00F6               	movwf	blink_led@off_time
   997     0772  3001               	movlw	1
   998     0773  00F7               	movwf	blink_led@off_time+1
   999     0774  30B8               	movlw	184
  1000     0775  00F8               	movwf	blink_led@duration
  1001     0776  300B               	movlw	11
  1002     0777  00F9               	movwf	blink_led@duration+1
  1003     0778  3056               	movlw	86
  1004     0779  2FC6               	goto	L1
  1005     077A                     l1350:	
  1006                           ;main.c: 133: } else {
  1007                           
  1008                           
  1009                           ;main.c: 135: intentos++;
  1010     077A  3001               	movlw	1
  1011     077B  07C9               	addwf	_intentos,f
  1012     077C  1803               	skipnc
  1013     077D  0ACA               	incf	_intentos+1,f
  1014     077E  3000               	movlw	0
  1015     077F  07CA               	addwf	_intentos+1,f
  1016                           
  1017                           ;main.c: 136: LCD_Clear();
  1018     0780  120A  118A  246E  120A  118A  	fcall	_LCD_Clear
  1019                           
  1020                           ;main.c: 137: LCD_String_xy(0, 0, "Clave Incorrecta");
  1021     0785  01F4               	clrf	LCD_String_xy@pos
  1022     0786  301B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1023     0787  00F5               	movwf	LCD_String_xy@msg
  1024     0788  3000               	movlw	0
  1025     0789  120A  118A  24B4  120A  118A  	fcall	_LCD_String_xy
  1026                           
  1027                           ;main.c: 138: blink_led('A', 300, 700, 2000);
  1028     078E  302C               	movlw	44
  1029     078F  00F4               	movwf	blink_led@on_time
  1030     0790  3001               	movlw	1
  1031     0791  00F5               	movwf	blink_led@on_time+1
  1032     0792  30BC               	movlw	188
  1033     0793  00F6               	movwf	blink_led@off_time
  1034     0794  3002               	movlw	2
  1035     0795  00F7               	movwf	blink_led@off_time+1
  1036     0796  30D0               	movlw	208
  1037     0797  00F8               	movwf	blink_led@duration
  1038     0798  3007               	movlw	7
  1039     0799  00F9               	movwf	blink_led@duration+1
  1040     079A  3041               	movlw	65
  1041     079B  120A  118A  25B9  120A  118A  	fcall	_blink_led
  1042                           
  1043                           ;main.c: 141: if (intentos >= 3) {
  1044     07A0  084A               	movf	_intentos+1,w
  1045     07A1  3A80               	xorlw	128
  1046     07A2  00FF               	movwf	127
  1047     07A3  3080               	movlw	128
  1048     07A4  027F               	subwf	127,w
  1049     07A5  1D03               	skipz
  1050     07A6  2FA9               	goto	u845
  1051     07A7  3003               	movlw	3
  1052     07A8  0249               	subwf	_intentos,w
  1053     07A9                     u845:
  1054     07A9  1C03               	skipc
  1055     07AA  2FCD               	goto	l1368
  1056                           
  1057                           ;main.c: 142: LCD_Clear();
  1058     07AB  120A  118A  246E  120A  118A  	fcall	_LCD_Clear
  1059                           
  1060                           ;main.c: 143: LCD_String_xy(0, 0, "Sistema Bloqueado");
  1061     07B0  01F4               	clrf	LCD_String_xy@pos
  1062     07B1  3009               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1063     07B2  00F5               	movwf	LCD_String_xy@msg
  1064     07B3  3000               	movlw	0
  1065     07B4  120A  118A  24B4  120A  118A  	fcall	_LCD_String_xy
  1066                           
  1067                           ;main.c: 144: blink_led('R', 300, 500, 8000);
  1068     07B9  302C               	movlw	44
  1069     07BA  00F4               	movwf	blink_led@on_time
  1070     07BB  3001               	movlw	1
  1071     07BC  00F5               	movwf	blink_led@on_time+1
  1072     07BD  30F4               	movlw	244
  1073     07BE  00F6               	movwf	blink_led@off_time
  1074     07BF  3001               	movlw	1
  1075     07C0  00F7               	movwf	blink_led@off_time+1
  1076     07C1  3040               	movlw	64
  1077     07C2  00F8               	movwf	blink_led@duration
  1078     07C3  301F               	movlw	31
  1079     07C4  00F9               	movwf	blink_led@duration+1
  1080     07C5  3052               	movlw	82
  1081     07C6                     L1:
  1082     07C6  120A  118A  25B9  120A  118A  	fcall	_blink_led
  1083                           
  1084                           ;main.c: 132: intentos = 0;
  1085     07CB  01C9               	clrf	_intentos
  1086     07CC  01CA               	clrf	_intentos+1
  1087     07CD                     l1368:
  1088                           
  1089                           ;main.c: 146: };main.c: 147: };main.c: 150: _delay((unsigned long)((2000)*(8000000/4000.
      +                          0)));
  1090     07CD  3015               	movlw	21
  1091     07CE  1283               	bcf	3,5	;RP0=0, select bank0
  1092     07CF  1303               	bcf	3,6	;RP1=0, select bank0
  1093     07D0  00B5               	movwf	??_main+2
  1094     07D1  304B               	movlw	75
  1095     07D2  00B4               	movwf	??_main+1
  1096     07D3  30BD               	movlw	189
  1097     07D4  00B3               	movwf	??_main
  1098     07D5                     u887:
  1099     07D5  0BB3               	decfsz	??_main,f
  1100     07D6  2FD5               	goto	u887
  1101     07D7  0BB4               	decfsz	??_main+1,f
  1102     07D8  2FD5               	goto	u887
  1103     07D9  0BB5               	decfsz	??_main+2,f
  1104     07DA  2FD5               	goto	u887
  1105     07DB  2FDC               	nop2
  1106                           
  1107                           ;main.c: 151: LCD_Clear();
  1108     07DC  120A  118A  246E  120A  118A  	fcall	_LCD_Clear
  1109                           
  1110                           ;main.c: 152: idx = 0;
  1111     07E1  1283               	bcf	3,5	;RP0=0, select bank0
  1112     07E2  1303               	bcf	3,6	;RP1=0, select bank0
  1113     07E3  01CB               	clrf	_idx
  1114     07E4  2EFD               	goto	l1310
  1115     07E5                     __end_of_main:
  1116                           
  1117                           	psect	text1
  1118     057C                     __ptext1:	
  1119 ;; *************** function _strncmp *****************
  1120 ;; Defined at:
  1121 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c90\common\strncmp.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  s1              1    wreg     PTR const unsigned char 
  1124 ;;		 -> pass_user(8), 
  1125 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1126 ;;		 -> password(8), 
  1127 ;;  len             2    1[COMMON] unsigned int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1130 ;;		 -> pass_user(8), 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  2    0[COMMON] int 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1135 ;; Tracked objects:
  1136 ;;		On entry : 300/0
  1137 ;;		On exit  : 300/0
  1138 ;;		Unchanged: 300/0
  1139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1140 ;;      Params:         3       0       0       0       0
  1141 ;;      Locals:         1       0       0       0       0
  1142 ;;      Temps:          2       0       0       0       0
  1143 ;;      Totals:         6       0       0       0       0
  1144 ;;Total ram usage:        6 bytes
  1145 ;; Hardware stack levels used: 2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153     057C                     _strncmp:	
  1154                           ;psect for function _strncmp
  1155                           
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1159                           ;strncmp@s1 stored from wreg
  1160     057C  00F5               	movwf	strncmp@s1
  1161     057D                     l1284:
  1162     057D  3001               	movlw	1
  1163     057E  02F1               	subwf	strncmp@len,f
  1164     057F  3000               	movlw	0
  1165     0580  1C03               	skipc
  1166     0581  03F2               	decf	strncmp@len+1,f
  1167     0582  02F2               	subwf	strncmp@len+1,f
  1168     0583  0A71               	incf	strncmp@len,w
  1169     0584  1903               	btfsc	3,2
  1170     0585  0A72               	incf	strncmp@len+1,w
  1171     0586  1903               	btfsc	3,2
  1172     0587  2DB6               	goto	l1286
  1173     0588  0875               	movf	strncmp@s1,w
  1174     0589  0084               	movwf	4
  1175     058A  1383               	bcf	3,7	;select IRP bank0
  1176     058B  0800               	movf	0,w
  1177     058C  1903               	btfsc	3,2
  1178     058D  2D9C               	goto	l1278
  1179     058E  0870               	movf	strncmp@s2,w
  1180     058F  0084               	movwf	4
  1181     0590  120A  118A  2003  120A  118A  	fcall	stringdir
  1182     0595  00F3               	movwf	??_strncmp
  1183     0596  0875               	movf	strncmp@s1,w
  1184     0597  0084               	movwf	4
  1185     0598  0800               	movf	0,w
  1186     0599  0673               	xorwf	??_strncmp,w
  1187     059A  1903               	skipnz
  1188     059B  2DAD               	goto	l1282
  1189     059C                     l1278:
  1190     059C  0870               	movf	strncmp@s2,w
  1191     059D  0084               	movwf	4
  1192     059E  120A  118A  2003   	fcall	stringdir
  1193     05A1  00F3               	movwf	??_strncmp
  1194     05A2  0875               	movf	strncmp@s1,w
  1195     05A3  0084               	movwf	4
  1196     05A4  0800               	movf	0,w
  1197     05A5  00F4               	movwf	??_strncmp+1
  1198     05A6  0873               	movf	??_strncmp,w
  1199     05A7  0274               	subwf	??_strncmp+1,w
  1200     05A8  00F0               	movwf	?_strncmp
  1201     05A9  01F1               	clrf	?_strncmp+1
  1202     05AA  1C03               	skipc
  1203     05AB  03F1               	decf	?_strncmp+1,f
  1204     05AC  0008               	return
  1205     05AD                     l1282:
  1206     05AD  3001               	movlw	1
  1207     05AE  00FF               	movwf	127
  1208     05AF  087F               	movf	127,w
  1209     05B0  07F5               	addwf	strncmp@s1,f
  1210     05B1  3001               	movlw	1
  1211     05B2  00FF               	movwf	127
  1212     05B3  087F               	movf	127,w
  1213     05B4  07F0               	addwf	strncmp@s2,f
  1214     05B5  2D7D               	goto	l1284
  1215     05B6                     l1286:
  1216     05B6  01F0               	clrf	?_strncmp
  1217     05B7  01F1               	clrf	?_strncmp+1
  1218     05B8  0008               	return
  1219     05B9                     __end_of_strncmp:
  1220                           
  1221                           	psect	text2
  1222     0462                     __ptext2:	
  1223 ;; *************** function _keypad_init *****************
  1224 ;; Defined at:
  1225 ;;		line 38 in file "keypad.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0, btemp+1
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 300/100
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1239 ;;      Params:         0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252     0462                     _keypad_init:	
  1253                           ;psect for function _keypad_init
  1254                           
  1255                           
  1256                           ;keypad.c: 40: TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _keypad_init: [wreg+status,2+status,0+btemp+1]
  1260     0462  30F0               	movlw	240
  1261     0463  00FF               	movwf	127
  1262     0464  087F               	movf	127,w
  1263     0465  1683               	bsf	3,5	;RP0=1, select bank1
  1264     0466  1303               	bcf	3,6	;RP1=0, select bank1
  1265     0467  0586               	andwf	6,f	;volatile
  1266                           
  1267                           ;keypad.c: 41: TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1268     0468  30F0               	movlw	240
  1269     0469  00FF               	movwf	127
  1270     046A  087F               	movf	127,w
  1271     046B  0486               	iorwf	6,f	;volatile
  1272                           
  1273                           ;keypad.c: 42: OPTION_REGbits.nRBPU = 0;
  1274     046C  1381               	bcf	1,7	;volatile
  1275     046D  0008               	return
  1276     046E                     __end_of_keypad_init:
  1277                           
  1278                           	psect	text3
  1279     060B                     __ptext3:	
  1280 ;; *************** function _keypad_getkey *****************
  1281 ;; Defined at:
  1282 ;;		line 57 in file "keypad.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1287 ;;  i               2   17[BANK0 ] int 
  1288 ;;  valor           1   16[BANK0 ] unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      unsigned char 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1293 ;; Tracked objects:
  1294 ;;		On entry : 300/0
  1295 ;;		On exit  : 300/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1298 ;;      Params:         0       0       0       0       0
  1299 ;;      Locals:         0      19       0       0       0
  1300 ;;      Temps:          4       0       0       0       0
  1301 ;;      Totals:         4      19       0       0       0
  1302 ;;Total ram usage:       23 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_main
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311     060B                     _keypad_getkey:	
  1312                           ;psect for function _keypad_getkey
  1313                           
  1314                           
  1315                           ;keypad.c: 59: char letras[4][4]={ {'1','2','3','A'},;keypad.c: 60: {'4','5','6','B'},;k
      +                          eypad.c: 61: {'7','8','9','C'},;keypad.c: 62: {'*','0','#','D'}};
  1316                           
  1317                           ;incstack = 0
  1318                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1319     060B  3020               	movlw	keypad_getkey@letras& (0+255)
  1320     060C  0084               	movwf	4
  1321     060D  3039               	movlw	low keypad_getkey@F1301
  1322     060E  00F0               	movwf	??_keypad_getkey
  1323     060F  0804               	movf	4,w
  1324     0610  00F1               	movwf	??_keypad_getkey+1
  1325     0611  3010               	movlw	16
  1326     0612  00F2               	movwf	??_keypad_getkey+2
  1327     0613                     u550:
  1328     0613  0870               	movf	??_keypad_getkey,w
  1329     0614  0084               	movwf	4
  1330     0615  1383               	bcf	3,7	;select IRP bank0
  1331     0616  0800               	movf	0,w
  1332     0617  00F3               	movwf	??_keypad_getkey+3
  1333     0618  0AF0               	incf	??_keypad_getkey,f
  1334     0619  0871               	movf	??_keypad_getkey+1,w
  1335     061A  0084               	movwf	4
  1336     061B  0873               	movf	??_keypad_getkey+3,w
  1337     061C  0080               	movwf	0
  1338     061D  0AF1               	incf	??_keypad_getkey+1,f
  1339     061E  0BF2               	decfsz	??_keypad_getkey+2,f
  1340     061F  2E13               	goto	u550
  1341                           
  1342                           ;keypad.c: 64: char valor=0;
  1343     0620  01B0               	clrf	keypad_getkey@valor
  1344                           
  1345                           ;keypad.c: 66: for(i=0;i<4;i++){
  1346     0621  01B1               	clrf	keypad_getkey@i
  1347     0622  01B2               	clrf	keypad_getkey@i+1
  1348     0623                     l1184:
  1349                           
  1350                           ;keypad.c: 68: if(i==0){
  1351     0623  1283               	bcf	3,5	;RP0=0, select bank0
  1352     0624  1303               	bcf	3,6	;RP1=0, select bank0
  1353     0625  0831               	movf	keypad_getkey@i,w
  1354     0626  0432               	iorwf	keypad_getkey@i+1,w
  1355     0627  1D03               	btfss	3,2
  1356     0628  2E45               	goto	l1204
  1357                           
  1358                           ;keypad.c: 70: PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1359     0629  30FE               	movlw	254
  1360     062A  0086               	movwf	6	;volatile
  1361                           
  1362                           ;keypad.c: 71: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1363     062B  3042               	movlw	66
  1364     062C  00F0               	movwf	??_keypad_getkey
  1365     062D                     u897:
  1366     062D  0BF0               	decfsz	??_keypad_getkey,f
  1367     062E  2E2D               	goto	u897
  1368     062F  0000               	nop
  1369     0630                     l1190:	
  1370                           ;keypad.c: 72: while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1371                           
  1372     0630  1283               	bcf	3,5	;RP0=0, select bank0
  1373     0631  1303               	bcf	3,6	;RP1=0, select bank0
  1374     0632  1A06               	btfsc	6,4	;volatile
  1375     0633  2E39               	goto	l1194
  1376     0634  0820               	movf	keypad_getkey@letras,w
  1377     0635  00B0               	movwf	keypad_getkey@valor
  1378     0636  2E30               	goto	l1190
  1379     0637                     l1192:
  1380     0637  0821               	movf	keypad_getkey@letras+1,w
  1381     0638  00B0               	movwf	keypad_getkey@valor
  1382     0639                     l1194:
  1383     0639  1A86               	btfsc	6,5	;volatile
  1384     063A  2E3E               	goto	l1198
  1385     063B  2E37               	goto	l1192
  1386     063C                     l1196:
  1387     063C  0822               	movf	keypad_getkey@letras+2,w
  1388     063D  00B0               	movwf	keypad_getkey@valor
  1389     063E                     l1198:
  1390     063E  1B06               	btfsc	6,6	;volatile
  1391     063F  2E43               	goto	l1202
  1392     0640  2E3C               	goto	l1196
  1393     0641                     l1200:
  1394     0641  0823               	movf	keypad_getkey@letras+3,w
  1395     0642  00B0               	movwf	keypad_getkey@valor
  1396     0643                     l1202:
  1397     0643  1F86               	btfss	6,7	;volatile
  1398     0644  2E41               	goto	l1200
  1399     0645                     l1204:
  1400                           
  1401                           ;keypad.c: 76: };keypad.c: 78: if(i==1){
  1402     0645  0331               	decf	keypad_getkey@i,w
  1403     0646  0432               	iorwf	keypad_getkey@i+1,w
  1404     0647  1D03               	btfss	3,2
  1405     0648  2E65               	goto	l1224
  1406                           
  1407                           ;keypad.c: 79: PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1408     0649  30FD               	movlw	253
  1409     064A  0086               	movwf	6	;volatile
  1410                           
  1411                           ;keypad.c: 80: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1412     064B  3042               	movlw	66
  1413     064C  00F0               	movwf	??_keypad_getkey
  1414     064D                     u907:
  1415     064D  0BF0               	decfsz	??_keypad_getkey,f
  1416     064E  2E4D               	goto	u907
  1417     064F  0000               	nop
  1418     0650                     l1210:	
  1419                           ;keypad.c: 81: while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1420                           
  1421     0650  1283               	bcf	3,5	;RP0=0, select bank0
  1422     0651  1303               	bcf	3,6	;RP1=0, select bank0
  1423     0652  1A06               	btfsc	6,4	;volatile
  1424     0653  2E59               	goto	l1214
  1425     0654  0824               	movf	keypad_getkey@letras+4,w
  1426     0655  00B0               	movwf	keypad_getkey@valor
  1427     0656  2E50               	goto	l1210
  1428     0657                     l1212:
  1429     0657  0825               	movf	keypad_getkey@letras+5,w
  1430     0658  00B0               	movwf	keypad_getkey@valor
  1431     0659                     l1214:
  1432     0659  1A86               	btfsc	6,5	;volatile
  1433     065A  2E5E               	goto	l1218
  1434     065B  2E57               	goto	l1212
  1435     065C                     l1216:
  1436     065C  0826               	movf	keypad_getkey@letras+6,w
  1437     065D  00B0               	movwf	keypad_getkey@valor
  1438     065E                     l1218:
  1439     065E  1B06               	btfsc	6,6	;volatile
  1440     065F  2E63               	goto	l1222
  1441     0660  2E5C               	goto	l1216
  1442     0661                     l1220:
  1443     0661  0827               	movf	keypad_getkey@letras+7,w
  1444     0662  00B0               	movwf	keypad_getkey@valor
  1445     0663                     l1222:
  1446     0663  1F86               	btfss	6,7	;volatile
  1447     0664  2E61               	goto	l1220
  1448     0665                     l1224:
  1449                           
  1450                           ;keypad.c: 85: };keypad.c: 87: if(i==2){
  1451     0665  3002               	movlw	2
  1452     0666  0631               	xorwf	keypad_getkey@i,w
  1453     0667  0432               	iorwf	keypad_getkey@i+1,w
  1454     0668  1D03               	btfss	3,2
  1455     0669  2E86               	goto	l1244
  1456                           
  1457                           ;keypad.c: 88: PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1458     066A  30FB               	movlw	251
  1459     066B  0086               	movwf	6	;volatile
  1460                           
  1461                           ;keypad.c: 89: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1462     066C  3042               	movlw	66
  1463     066D  00F0               	movwf	??_keypad_getkey
  1464     066E                     u917:
  1465     066E  0BF0               	decfsz	??_keypad_getkey,f
  1466     066F  2E6E               	goto	u917
  1467     0670  0000               	nop
  1468     0671                     l1230:	
  1469                           ;keypad.c: 90: while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1470                           
  1471     0671  1283               	bcf	3,5	;RP0=0, select bank0
  1472     0672  1303               	bcf	3,6	;RP1=0, select bank0
  1473     0673  1A06               	btfsc	6,4	;volatile
  1474     0674  2E7A               	goto	l1234
  1475     0675  0828               	movf	keypad_getkey@letras+8,w
  1476     0676  00B0               	movwf	keypad_getkey@valor
  1477     0677  2E71               	goto	l1230
  1478     0678                     l1232:
  1479     0678  0829               	movf	keypad_getkey@letras+9,w
  1480     0679  00B0               	movwf	keypad_getkey@valor
  1481     067A                     l1234:
  1482     067A  1A86               	btfsc	6,5	;volatile
  1483     067B  2E7F               	goto	l1238
  1484     067C  2E78               	goto	l1232
  1485     067D                     l1236:
  1486     067D  082A               	movf	keypad_getkey@letras+10,w
  1487     067E  00B0               	movwf	keypad_getkey@valor
  1488     067F                     l1238:
  1489     067F  1B06               	btfsc	6,6	;volatile
  1490     0680  2E84               	goto	l1242
  1491     0681  2E7D               	goto	l1236
  1492     0682                     l1240:
  1493     0682  082B               	movf	keypad_getkey@letras+11,w
  1494     0683  00B0               	movwf	keypad_getkey@valor
  1495     0684                     l1242:
  1496     0684  1F86               	btfss	6,7	;volatile
  1497     0685  2E82               	goto	l1240
  1498     0686                     l1244:
  1499                           
  1500                           ;keypad.c: 94: };keypad.c: 96: if(i==3){
  1501     0686  3003               	movlw	3
  1502     0687  0631               	xorwf	keypad_getkey@i,w
  1503     0688  0432               	iorwf	keypad_getkey@i+1,w
  1504     0689  1D03               	btfss	3,2
  1505     068A  2EA7               	goto	l1264
  1506                           
  1507                           ;keypad.c: 97: PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1508     068B  30F7               	movlw	247
  1509     068C  0086               	movwf	6	;volatile
  1510                           
  1511                           ;keypad.c: 98: _delay((unsigned long)((100)*(8000000/4000000.0)));
  1512     068D  3042               	movlw	66
  1513     068E  00F0               	movwf	??_keypad_getkey
  1514     068F                     u927:
  1515     068F  0BF0               	decfsz	??_keypad_getkey,f
  1516     0690  2E8F               	goto	u927
  1517     0691  0000               	nop
  1518     0692                     l1250:	
  1519                           ;keypad.c: 99: while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1520                           
  1521     0692  1283               	bcf	3,5	;RP0=0, select bank0
  1522     0693  1303               	bcf	3,6	;RP1=0, select bank0
  1523     0694  1A06               	btfsc	6,4	;volatile
  1524     0695  2E9B               	goto	l1254
  1525     0696  082C               	movf	keypad_getkey@letras+12,w
  1526     0697  00B0               	movwf	keypad_getkey@valor
  1527     0698  2E92               	goto	l1250
  1528     0699                     l1252:
  1529     0699  082D               	movf	keypad_getkey@letras+13,w
  1530     069A  00B0               	movwf	keypad_getkey@valor
  1531     069B                     l1254:
  1532     069B  1A86               	btfsc	6,5	;volatile
  1533     069C  2EA0               	goto	l1258
  1534     069D  2E99               	goto	l1252
  1535     069E                     l1256:
  1536     069E  082E               	movf	keypad_getkey@letras+14,w
  1537     069F  00B0               	movwf	keypad_getkey@valor
  1538     06A0                     l1258:
  1539     06A0  1B06               	btfsc	6,6	;volatile
  1540     06A1  2EA5               	goto	l1262
  1541     06A2  2E9E               	goto	l1256
  1542     06A3                     l1260:
  1543     06A3  082F               	movf	keypad_getkey@letras+15,w
  1544     06A4  00B0               	movwf	keypad_getkey@valor
  1545     06A5                     l1262:
  1546     06A5  1F86               	btfss	6,7	;volatile
  1547     06A6  2EA3               	goto	l1260
  1548     06A7                     l1264:
  1549     06A7  3001               	movlw	1
  1550     06A8  07B1               	addwf	keypad_getkey@i,f
  1551     06A9  1803               	skipnc
  1552     06AA  0AB2               	incf	keypad_getkey@i+1,f
  1553     06AB  3000               	movlw	0
  1554     06AC  07B2               	addwf	keypad_getkey@i+1,f
  1555     06AD  0832               	movf	keypad_getkey@i+1,w
  1556     06AE  3A80               	xorlw	128
  1557     06AF  00FF               	movwf	127
  1558     06B0  3080               	movlw	128
  1559     06B1  027F               	subwf	127,w
  1560     06B2  1D03               	skipz
  1561     06B3  2EB6               	goto	u765
  1562     06B4  3004               	movlw	4
  1563     06B5  0231               	subwf	keypad_getkey@i,w
  1564     06B6                     u765:
  1565     06B6  1C03               	skipc
  1566     06B7  2E23               	goto	l1184
  1567                           
  1568                           ;keypad.c: 103: };keypad.c: 104: };keypad.c: 106: return valor;
  1569     06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1570     06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1571     06BA  0830               	movf	keypad_getkey@valor,w
  1572     06BB  0008               	return
  1573     06BC                     __end_of_keypad_getkey:
  1574                           
  1575                           	psect	text4
  1576     05B9                     __ptext4:	
  1577 ;; *************** function _blink_led *****************
  1578 ;; Defined at:
  1579 ;;		line 44 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;  led             1    wreg     unsigned char 
  1582 ;;  on_time         2    4[COMMON] unsigned int 
  1583 ;;  off_time        2    6[COMMON] unsigned int 
  1584 ;;  duration        2    8[COMMON] unsigned int 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  led             1    2[BANK0 ] unsigned char 
  1587 ;;  elapsed_time    2    0[BANK0 ] unsigned int 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, pclath, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 300/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1597 ;;      Params:         6       0       0       0       0
  1598 ;;      Locals:         0       3       0       0       0
  1599 ;;      Temps:          2       0       0       0       0
  1600 ;;      Totals:         8       3       0       0       0
  1601 ;;Total ram usage:       11 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 1
  1604 ;; This function calls:
  1605 ;;		_delay_ms_variable
  1606 ;; This function is called by:
  1607 ;;		_main
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611     05B9                     _blink_led:	
  1612                           ;psect for function _blink_led
  1613                           
  1614                           
  1615                           ;incstack = 0
  1616                           ; Regs used in _blink_led: [wreg+status,2+status,0+pclath+cstack]
  1617                           ;blink_led@led stored from wreg
  1618     05B9  1283               	bcf	3,5	;RP0=0, select bank0
  1619     05BA  1303               	bcf	3,6	;RP1=0, select bank0
  1620     05BB  00A2               	movwf	blink_led@led
  1621                           
  1622                           ;main.c: 45: unsigned int elapsed_time = 0;
  1623     05BC  01A0               	clrf	blink_led@elapsed_time
  1624     05BD  01A1               	clrf	blink_led@elapsed_time+1
  1625     05BE                     l1134:	
  1626                           ;main.c: 47: while (elapsed_time < duration) {
  1627                           
  1628     05BE  0879               	movf	blink_led@duration+1,w
  1629     05BF  0221               	subwf	blink_led@elapsed_time+1,w
  1630     05C0  1D03               	skipz
  1631     05C1  2DC4               	goto	u535
  1632     05C2  0878               	movf	blink_led@duration,w
  1633     05C3  0220               	subwf	blink_led@elapsed_time,w
  1634     05C4                     u535:
  1635     05C4  1803               	btfsc	3,0
  1636     05C5  0008               	return
  1637                           
  1638                           ;main.c: 48: if (led == 'V') {
  1639     05C6  3056               	movlw	86
  1640     05C7  0622               	xorwf	blink_led@led,w
  1641     05C8  1D03               	btfss	3,2
  1642     05C9  2DCC               	goto	l1108
  1643                           
  1644                           ;main.c: 49: PORTAbits.RA0 = 1;
  1645     05CA  1405               	bsf	5,0	;volatile
  1646                           
  1647                           ;main.c: 50: } else if (led == 'A') {
  1648     05CB  2DD6               	goto	l1116
  1649     05CC                     l1108:
  1650     05CC  3041               	movlw	65
  1651     05CD  0622               	xorwf	blink_led@led,w
  1652     05CE  1D03               	btfss	3,2
  1653     05CF  2DD2               	goto	l1112
  1654                           
  1655                           ;main.c: 51: PORTAbits.RA1 = 1;
  1656     05D0  1485               	bsf	5,1	;volatile
  1657                           
  1658                           ;main.c: 52: } else if (led == 'R') {
  1659     05D1  2DD6               	goto	l1116
  1660     05D2                     l1112:
  1661     05D2  3052               	movlw	82
  1662     05D3  0622               	xorwf	blink_led@led,w
  1663     05D4  1903               	btfsc	3,2
  1664                           
  1665                           ;main.c: 53: PORTAbits.RA2 = 1;
  1666     05D5  1505               	bsf	5,2	;volatile
  1667     05D6                     l1116:
  1668                           
  1669                           ;main.c: 54: };main.c: 55: delay_ms_variable(on_time);
  1670     05D6  0875               	movf	blink_led@on_time+1,w
  1671     05D7  00F1               	movwf	delay_ms_variable@ms+1
  1672     05D8  0874               	movf	blink_led@on_time,w
  1673     05D9  00F0               	movwf	delay_ms_variable@ms
  1674     05DA  120A  118A  249F  120A  118A  	fcall	_delay_ms_variable
  1675                           
  1676                           ;main.c: 58: if (led == 'V') {
  1677     05DF  3056               	movlw	86
  1678     05E0  1283               	bcf	3,5	;RP0=0, select bank0
  1679     05E1  1303               	bcf	3,6	;RP1=0, select bank0
  1680     05E2  0622               	xorwf	blink_led@led,w
  1681     05E3  1D03               	btfss	3,2
  1682     05E4  2DE7               	goto	l1122
  1683                           
  1684                           ;main.c: 59: PORTAbits.RA0 = 0;
  1685     05E5  1005               	bcf	5,0	;volatile
  1686                           
  1687                           ;main.c: 60: } else if (led == 'A') {
  1688     05E6  2DF1               	goto	l1130
  1689     05E7                     l1122:
  1690     05E7  3041               	movlw	65
  1691     05E8  0622               	xorwf	blink_led@led,w
  1692     05E9  1D03               	btfss	3,2
  1693     05EA  2DED               	goto	l1126
  1694                           
  1695                           ;main.c: 61: PORTAbits.RA1 = 0;
  1696     05EB  1085               	bcf	5,1	;volatile
  1697                           
  1698                           ;main.c: 62: } else if (led == 'R') {
  1699     05EC  2DF1               	goto	l1130
  1700     05ED                     l1126:
  1701     05ED  3052               	movlw	82
  1702     05EE  0622               	xorwf	blink_led@led,w
  1703     05EF  1903               	btfsc	3,2
  1704                           
  1705                           ;main.c: 63: PORTAbits.RA2 = 0;
  1706     05F0  1105               	bcf	5,2	;volatile
  1707     05F1                     l1130:
  1708                           
  1709                           ;main.c: 64: };main.c: 65: delay_ms_variable(off_time);
  1710     05F1  0877               	movf	blink_led@off_time+1,w
  1711     05F2  00F1               	movwf	delay_ms_variable@ms+1
  1712     05F3  0876               	movf	blink_led@off_time,w
  1713     05F4  00F0               	movwf	delay_ms_variable@ms
  1714     05F5  120A  118A  249F  120A  118A  	fcall	_delay_ms_variable
  1715                           
  1716                           ;main.c: 67: elapsed_time += on_time + off_time;
  1717     05FA  0876               	movf	blink_led@off_time,w
  1718     05FB  0774               	addwf	blink_led@on_time,w
  1719     05FC  00FA               	movwf	??_blink_led
  1720     05FD  0877               	movf	blink_led@off_time+1,w
  1721     05FE  1803               	skipnc
  1722     05FF  0A77               	incf	blink_led@off_time+1,w
  1723     0600  0775               	addwf	blink_led@on_time+1,w
  1724     0601  00FB               	movwf	??_blink_led+1
  1725     0602  087A               	movf	??_blink_led,w
  1726     0603  1283               	bcf	3,5	;RP0=0, select bank0
  1727     0604  1303               	bcf	3,6	;RP1=0, select bank0
  1728     0605  07A0               	addwf	blink_led@elapsed_time,f
  1729     0606  1803               	skipnc
  1730     0607  0AA1               	incf	blink_led@elapsed_time+1,f
  1731     0608  087B               	movf	??_blink_led+1,w
  1732     0609  07A1               	addwf	blink_led@elapsed_time+1,f
  1733     060A  2DBE               	goto	l1134
  1734     060B                     __end_of_blink_led:
  1735                           
  1736                           	psect	text5
  1737     049F                     __ptext5:	
  1738 ;; *************** function _delay_ms_variable *****************
  1739 ;; Defined at:
  1740 ;;		line 37 in file "main.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  ms              2    0[COMMON] unsigned int 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0
  1749 ;; Tracked objects:
  1750 ;;		On entry : 300/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         2       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0
  1756 ;;      Temps:          2       0       0       0       0
  1757 ;;      Totals:         4       0       0       0       0
  1758 ;;Total ram usage:        4 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; This function calls:
  1761 ;;		Nothing
  1762 ;; This function is called by:
  1763 ;;		_blink_led
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767     049F                     _delay_ms_variable:	
  1768                           ;psect for function _delay_ms_variable
  1769                           
  1770     049F                     l1072:	
  1771                           ;main.c: 38: while (ms--) {
  1772                           
  1773                           ;incstack = 0
  1774                           ; Regs used in _delay_ms_variable: [wreg+status,2+status,0]
  1775                           
  1776     049F  3001               	movlw	1
  1777     04A0  02F0               	subwf	delay_ms_variable@ms,f
  1778     04A1  3000               	movlw	0
  1779     04A2  1C03               	skipc
  1780     04A3  03F1               	decf	delay_ms_variable@ms+1,f
  1781     04A4  02F1               	subwf	delay_ms_variable@ms+1,f
  1782     04A5  0A70               	incf	delay_ms_variable@ms,w
  1783     04A6  1903               	btfsc	3,2
  1784     04A7  0A71               	incf	delay_ms_variable@ms+1,w
  1785     04A8  1903               	btfsc	3,2
  1786     04A9  0008               	return
  1787                           
  1788                           ;main.c: 39: _delay((unsigned long)((1)*(8000000/4000.0)));
  1789     04AA  3003               	movlw	3
  1790     04AB  00F3               	movwf	??_delay_ms_variable+1
  1791     04AC  3097               	movlw	151
  1792     04AD  00F2               	movwf	??_delay_ms_variable
  1793     04AE                     u937:
  1794     04AE  0BF2               	decfsz	??_delay_ms_variable,f
  1795     04AF  2CAE               	goto	u937
  1796     04B0  0BF3               	decfsz	??_delay_ms_variable+1,f
  1797     04B1  2CAE               	goto	u937
  1798     04B2  2CB3               	nop2
  1799     04B3  2C9F               	goto	l1072
  1800     04B4                     __end_of_delay_ms_variable:
  1801                           
  1802                           	psect	text6
  1803     04B4                     __ptext6:	
  1804 ;; *************** function _LCD_String_xy *****************
  1805 ;; Defined at:
  1806 ;;		line 116 in file "lcd.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  row             1    wreg     unsigned char 
  1809 ;;  pos             1    4[COMMON] unsigned char 
  1810 ;;  msg             1    5[COMMON] PTR const unsigned char 
  1811 ;;		 -> STR_5(18), STR_4(17), STR_3(15), STR_2(12), 
  1812 ;;		 -> STR_1(11), 
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  row             1    6[COMMON] unsigned char 
  1815 ;;  location        1    7[COMMON] unsigned char 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/100
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         2       0       0       0       0
  1826 ;;      Locals:         2       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0
  1828 ;;      Totals:         4       0       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 2
  1832 ;; This function calls:
  1833 ;;		_LCD_Command
  1834 ;;		_LCD_String
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     04B4                     _LCD_String_xy:	
  1841                           ;psect for function _LCD_String_xy
  1842                           
  1843                           
  1844                           ;incstack = 0
  1845                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1846                           ;LCD_String_xy@row stored from wreg
  1847     04B4  00F6               	movwf	LCD_String_xy@row
  1848                           
  1849                           ;lcd.c: 119: if(row<=1)
  1850     04B5  3002               	movlw	2
  1851     04B6  0276               	subwf	LCD_String_xy@row,w
  1852     04B7  1803               	skipnc
  1853     04B8  2CBD               	goto	l1166
  1854                           
  1855                           ;lcd.c: 120: {;lcd.c: 121: location=(0x80) | ((pos) & 0x0f);
  1856     04B9  0874               	movf	LCD_String_xy@pos,w
  1857     04BA  390F               	andlw	15
  1858     04BB  3880               	iorlw	128
  1859     04BC  2CC0               	goto	L2
  1860     04BD                     l1166:	
  1861                           ;lcd.c: 123: }
  1862                           
  1863                           ;lcd.c: 122: LCD_Command(location);
  1864                           
  1865                           
  1866                           ;lcd.c: 124: else;lcd.c: 125: {;lcd.c: 126: location=(0xC0) | ((pos) & 0x0f);
  1867     04BD  0874               	movf	LCD_String_xy@pos,w
  1868     04BE  390F               	andlw	15
  1869     04BF  38C0               	iorlw	192
  1870     04C0                     L2:
  1871     04C0  00F7               	movwf	LCD_String_xy@location
  1872                           
  1873                           ;lcd.c: 127: LCD_Command(location);
  1874     04C1  0877               	movf	LCD_String_xy@location,w
  1875     04C2  120A  118A  2510  120A  118A  	fcall	_LCD_Command
  1876                           
  1877                           ;lcd.c: 128: };lcd.c: 131: LCD_String(msg);
  1878     04C7  0875               	movf	LCD_String_xy@msg,w
  1879     04C8  120A  118A  24CC   	fcall	_LCD_String
  1880     04CB  0008               	return
  1881     04CC                     __end_of_LCD_String_xy:
  1882                           
  1883                           	psect	text7
  1884     04CC                     __ptext7:	
  1885 ;; *************** function _LCD_String *****************
  1886 ;; Defined at:
  1887 ;;		line 106 in file "lcd.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  msg             1    wreg     PTR const unsigned char 
  1890 ;;		 -> STR_5(18), STR_4(17), STR_3(15), STR_2(12), 
  1891 ;;		 -> STR_1(11), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  msg             1    3[COMMON] PTR const unsigned char 
  1894 ;;		 -> STR_5(18), STR_4(17), STR_3(15), STR_2(12), 
  1895 ;;		 -> STR_1(11), 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/100
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         1       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         1       0       0       0       0
  1909 ;;Total ram usage:        1 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 1
  1912 ;; This function calls:
  1913 ;;		_LCD_Char
  1914 ;; This function is called by:
  1915 ;;		_LCD_String_xy
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919     04CC                     _LCD_String:	
  1920                           ;psect for function _LCD_String
  1921                           
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1925                           ;LCD_String@msg stored from wreg
  1926     04CC  00F3               	movwf	LCD_String@msg
  1927     04CD                     l1100:	
  1928                           ;lcd.c: 108: while((*msg)!=0)
  1929                           
  1930     04CD  0873               	movf	LCD_String@msg,w
  1931     04CE  0084               	movwf	4
  1932     04CF  120A  118A  2003  120A  118A  	fcall	stringdir
  1933     04D4  3A00               	xorlw	0
  1934     04D5  1903               	btfsc	3,2
  1935     04D6  0008               	return
  1936                           
  1937                           ;lcd.c: 109: {;lcd.c: 110: LCD_Char(*msg);
  1938     04D7  0873               	movf	LCD_String@msg,w
  1939     04D8  0084               	movwf	4
  1940     04D9  120A  118A  2003  120A  118A  	fcall	stringdir
  1941     04DE  120A  118A  2546  120A  118A  	fcall	_LCD_Char
  1942                           
  1943                           ;lcd.c: 111: msg++;
  1944     04E3  3001               	movlw	1
  1945     04E4  00FF               	movwf	127
  1946     04E5  087F               	movf	127,w
  1947     04E6  07F3               	addwf	LCD_String@msg,f
  1948     04E7  2CCD               	goto	l1100
  1949     04E8                     __end_of_LCD_String:
  1950                           
  1951                           	psect	text8
  1952     0546                     __ptext8:	
  1953 ;; *************** function _LCD_Char *****************
  1954 ;; Defined at:
  1955 ;;		line 91 in file "lcd.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  dat             1    wreg     unsigned char 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  dat             1    2[COMMON] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       0       0       0       0
  1970 ;;      Locals:         1       0       0       0       0
  1971 ;;      Temps:          2       0       0       0       0
  1972 ;;      Totals:         3       0       0       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;;		_LCD_String
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983     0546                     _LCD_Char:	
  1984                           ;psect for function _LCD_Char
  1985                           
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1989                           ;LCD_Char@dat stored from wreg
  1990     0546  00F2               	movwf	LCD_Char@dat
  1991                           
  1992                           ;lcd.c: 93: PORTC = (PORTC & 0x0f) | (0xF0 & dat);
  1993     0547  30F0               	movlw	240
  1994     0548  0572               	andwf	LCD_Char@dat,w
  1995     0549  00F0               	movwf	??_LCD_Char
  1996     054A  1283               	bcf	3,5	;RP0=0, select bank0
  1997     054B  1303               	bcf	3,6	;RP1=0, select bank0
  1998     054C  0807               	movf	7,w	;volatile
  1999     054D  390F               	andlw	15
  2000     054E  0470               	iorwf	??_LCD_Char,w
  2001     054F  0087               	movwf	7	;volatile
  2002                           
  2003                           ;lcd.c: 94: PORTCbits.RC0 = 1;
  2004     0550  1407               	bsf	7,0	;volatile
  2005                           
  2006                           ;lcd.c: 95: PORTCbits.RC1 = 1;
  2007     0551  1487               	bsf	7,1	;volatile
  2008                           
  2009                           ;lcd.c: 96: __nop();
  2010     0552  0000               	nop
  2011                           
  2012                           ;lcd.c: 97: PORTCbits.RC1 = 0;
  2013     0553  1283               	bcf	3,5	;RP0=0, select bank0
  2014     0554  1303               	bcf	3,6	;RP1=0, select bank0
  2015     0555  1087               	bcf	7,1	;volatile
  2016                           
  2017                           ;lcd.c: 98: _delay((unsigned long)((1)*(8000000/4000.0)));
  2018     0556  3003               	movlw	3
  2019     0557  00F1               	movwf	??_LCD_Char+1
  2020     0558  3097               	movlw	151
  2021     0559  00F0               	movwf	??_LCD_Char
  2022     055A                     u947:
  2023     055A  0BF0               	decfsz	??_LCD_Char,f
  2024     055B  2D5A               	goto	u947
  2025     055C  0BF1               	decfsz	??_LCD_Char+1,f
  2026     055D  2D5A               	goto	u947
  2027     055E  2D5F               	nop2
  2028                           
  2029                           ;lcd.c: 99: PORTC = (unsigned char)((PORTC & 0x0f) | (dat<<4));
  2030     055F  0872               	movf	LCD_Char@dat,w
  2031     0560  00F0               	movwf	??_LCD_Char
  2032     0561  3004               	movlw	4
  2033     0562                     u435:
  2034     0562  1003               	clrc
  2035     0563  0DF0               	rlf	??_LCD_Char,f
  2036     0564  3EFF               	addlw	-1
  2037     0565  1D03               	skipz
  2038     0566  2D62               	goto	u435
  2039     0567  1283               	bcf	3,5	;RP0=0, select bank0
  2040     0568  1303               	bcf	3,6	;RP1=0, select bank0
  2041     0569  0807               	movf	7,w	;volatile
  2042     056A  390F               	andlw	15
  2043     056B  0470               	iorwf	??_LCD_Char,w
  2044     056C  0087               	movwf	7	;volatile
  2045                           
  2046                           ;lcd.c: 100: PORTCbits.RC1 = 1;
  2047     056D  1487               	bsf	7,1	;volatile
  2048                           
  2049                           ;lcd.c: 101: __nop();
  2050     056E  0000               	nop
  2051                           
  2052                           ;lcd.c: 102: PORTCbits.RC1 = 0;
  2053     056F  1283               	bcf	3,5	;RP0=0, select bank0
  2054     0570  1303               	bcf	3,6	;RP1=0, select bank0
  2055     0571  1087               	bcf	7,1	;volatile
  2056                           
  2057                           ;lcd.c: 103: _delay((unsigned long)((3)*(8000000/4000.0)));
  2058     0572  3008               	movlw	8
  2059     0573  00F1               	movwf	??_LCD_Char+1
  2060     0574  30C9               	movlw	201
  2061     0575  00F0               	movwf	??_LCD_Char
  2062     0576                     u957:
  2063     0576  0BF0               	decfsz	??_LCD_Char,f
  2064     0577  2D76               	goto	u957
  2065     0578  0BF1               	decfsz	??_LCD_Char+1,f
  2066     0579  2D76               	goto	u957
  2067     057A  2D7B               	nop2
  2068     057B  0008               	return
  2069     057C                     __end_of_LCD_Char:
  2070                           
  2071                           	psect	text9
  2072     04E8                     __ptext9:	
  2073 ;; *************** function _LCD_Init *****************
  2074 ;; Defined at:
  2075 ;;		line 38 in file "lcd.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          2       0       0       0       0
  2092 ;;      Totals:         2       0       0       0       0
  2093 ;;Total ram usage:        2 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 1
  2096 ;; This function calls:
  2097 ;;		_LCD_Command
  2098 ;; This function is called by:
  2099 ;;		_main
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103     04E8                     _LCD_Init:	
  2104                           ;psect for function _LCD_Init
  2105                           
  2106                           
  2107                           ;lcd.c: 40: TRISC = 0;
  2108                           
  2109                           ;incstack = 0
  2110                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  2111     04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2112     04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2113     04EA  0187               	clrf	7	;volatile
  2114                           
  2115                           ;lcd.c: 41: _delay((unsigned long)((15)*(8000000/4000.0)));
  2116     04EB  3027               	movlw	39
  2117     04EC  00F4               	movwf	??_LCD_Init+1
  2118     04ED  30F5               	movlw	245
  2119     04EE  00F3               	movwf	??_LCD_Init
  2120     04EF                     u967:
  2121     04EF  0BF3               	decfsz	??_LCD_Init,f
  2122     04F0  2CEF               	goto	u967
  2123     04F1  0BF4               	decfsz	??_LCD_Init+1,f
  2124     04F2  2CEF               	goto	u967
  2125                           
  2126                           ;lcd.c: 42: LCD_Command(0x02);
  2127     04F3  3002               	movlw	2
  2128     04F4  120A  118A  2510  120A  118A  	fcall	_LCD_Command
  2129                           
  2130                           ;lcd.c: 43: LCD_Command(0x28);
  2131     04F9  3028               	movlw	40
  2132     04FA  120A  118A  2510  120A  118A  	fcall	_LCD_Command
  2133                           
  2134                           ;lcd.c: 44: LCD_Command(0x01);
  2135     04FF  3001               	movlw	1
  2136     0500  120A  118A  2510  120A  118A  	fcall	_LCD_Command
  2137                           
  2138                           ;lcd.c: 45: LCD_Command(0x0c);
  2139     0505  300C               	movlw	12
  2140     0506  120A  118A  2510  120A  118A  	fcall	_LCD_Command
  2141                           
  2142                           ;lcd.c: 46: LCD_Command(0x06);
  2143     050B  3006               	movlw	6
  2144     050C  120A  118A  2510   	fcall	_LCD_Command
  2145     050F  0008               	return
  2146     0510                     __end_of_LCD_Init:
  2147                           
  2148                           	psect	text10
  2149     046E                     __ptext10:	
  2150 ;; *************** function _LCD_Clear *****************
  2151 ;; Defined at:
  2152 ;;		line 147 in file "lcd.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;		None
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, status,2, status,0, pclath, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/100
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2166 ;;      Params:         0       0       0       0       0
  2167 ;;      Locals:         0       0       0       0       0
  2168 ;;      Temps:          2       0       0       0       0
  2169 ;;      Totals:         2       0       0       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 1
  2173 ;; This function calls:
  2174 ;;		_LCD_Command
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180     046E                     _LCD_Clear:	
  2181                           ;psect for function _LCD_Clear
  2182                           
  2183                           
  2184                           ;lcd.c: 149: LCD_Command(0x01);
  2185                           
  2186                           ;incstack = 0
  2187                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  2188     046E  3001               	movlw	1
  2189     046F  120A  118A  2510  120A  118A  	fcall	_LCD_Command
  2190                           
  2191                           ;lcd.c: 150: _delay((unsigned long)((3)*(8000000/4000.0)));
  2192     0474  3008               	movlw	8
  2193     0475  00F4               	movwf	??_LCD_Clear+1
  2194     0476  30C9               	movlw	201
  2195     0477  00F3               	movwf	??_LCD_Clear
  2196     0478                     u977:
  2197     0478  0BF3               	decfsz	??_LCD_Clear,f
  2198     0479  2C78               	goto	u977
  2199     047A  0BF4               	decfsz	??_LCD_Clear+1,f
  2200     047B  2C78               	goto	u977
  2201     047C  2C7D               	nop2
  2202     047D  0008               	return
  2203     047E                     __end_of_LCD_Clear:
  2204                           
  2205                           	psect	text11
  2206     0510                     __ptext11:	
  2207 ;; *************** function _LCD_Command *****************
  2208 ;; Defined at:
  2209 ;;		line 62 in file "lcd.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  cmd             1    wreg     unsigned char 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  cmd             1    2[COMMON] unsigned char 
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      void 
  2216 ;; Registers used:
  2217 ;;		wreg, status,2, status,0
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/100
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2223 ;;      Params:         0       0       0       0       0
  2224 ;;      Locals:         1       0       0       0       0
  2225 ;;      Temps:          2       0       0       0       0
  2226 ;;      Totals:         3       0       0       0       0
  2227 ;;Total ram usage:        3 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; This function calls:
  2230 ;;		Nothing
  2231 ;; This function is called by:
  2232 ;;		_main
  2233 ;;		_LCD_Init
  2234 ;;		_LCD_String_xy
  2235 ;;		_LCD_Clear
  2236 ;; This function uses a non-reentrant model
  2237 ;;
  2238                           
  2239     0510                     _LCD_Command:	
  2240                           ;psect for function _LCD_Command
  2241                           
  2242                           
  2243                           ;incstack = 0
  2244                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  2245                           ;LCD_Command@cmd stored from wreg
  2246     0510  00F2               	movwf	LCD_Command@cmd
  2247                           
  2248                           ;lcd.c: 64: PORTC = (PORTC & 0x0f) |(0xF0 & cmd);
  2249     0511  30F0               	movlw	240
  2250     0512  0572               	andwf	LCD_Command@cmd,w
  2251     0513  00F0               	movwf	??_LCD_Command
  2252     0514  1283               	bcf	3,5	;RP0=0, select bank0
  2253     0515  1303               	bcf	3,6	;RP1=0, select bank0
  2254     0516  0807               	movf	7,w	;volatile
  2255     0517  390F               	andlw	15
  2256     0518  0470               	iorwf	??_LCD_Command,w
  2257     0519  0087               	movwf	7	;volatile
  2258                           
  2259                           ;lcd.c: 65: PORTCbits.RC0 = 0;
  2260     051A  1007               	bcf	7,0	;volatile
  2261                           
  2262                           ;lcd.c: 66: PORTCbits.RC1 = 1;
  2263     051B  1487               	bsf	7,1	;volatile
  2264                           
  2265                           ;lcd.c: 67: __nop();
  2266     051C  0000               	nop
  2267                           
  2268                           ;lcd.c: 68: PORTCbits.RC1 = 0;
  2269     051D  1283               	bcf	3,5	;RP0=0, select bank0
  2270     051E  1303               	bcf	3,6	;RP1=0, select bank0
  2271     051F  1087               	bcf	7,1	;volatile
  2272                           
  2273                           ;lcd.c: 69: _delay((unsigned long)((1)*(8000000/4000.0)));
  2274     0520  3003               	movlw	3
  2275     0521  00F1               	movwf	??_LCD_Command+1
  2276     0522  3097               	movlw	151
  2277     0523  00F0               	movwf	??_LCD_Command
  2278     0524                     u987:
  2279     0524  0BF0               	decfsz	??_LCD_Command,f
  2280     0525  2D24               	goto	u987
  2281     0526  0BF1               	decfsz	??_LCD_Command+1,f
  2282     0527  2D24               	goto	u987
  2283     0528  2D29               	nop2
  2284                           
  2285                           ;lcd.c: 70: PORTC = (unsigned char)((PORTC & 0x0f) | (cmd<<4));
  2286     0529  0872               	movf	LCD_Command@cmd,w
  2287     052A  00F0               	movwf	??_LCD_Command
  2288     052B  3004               	movlw	4
  2289     052C                     u455:
  2290     052C  1003               	clrc
  2291     052D  0DF0               	rlf	??_LCD_Command,f
  2292     052E  3EFF               	addlw	-1
  2293     052F  1D03               	skipz
  2294     0530  2D2C               	goto	u455
  2295     0531  1283               	bcf	3,5	;RP0=0, select bank0
  2296     0532  1303               	bcf	3,6	;RP1=0, select bank0
  2297     0533  0807               	movf	7,w	;volatile
  2298     0534  390F               	andlw	15
  2299     0535  0470               	iorwf	??_LCD_Command,w
  2300     0536  0087               	movwf	7	;volatile
  2301                           
  2302                           ;lcd.c: 71: PORTCbits.RC1 = 1;
  2303     0537  1487               	bsf	7,1	;volatile
  2304                           
  2305                           ;lcd.c: 72: __nop();
  2306     0538  0000               	nop
  2307                           
  2308                           ;lcd.c: 73: PORTCbits.RC1 = 0;
  2309     0539  1283               	bcf	3,5	;RP0=0, select bank0
  2310     053A  1303               	bcf	3,6	;RP1=0, select bank0
  2311     053B  1087               	bcf	7,1	;volatile
  2312                           
  2313                           ;lcd.c: 74: _delay((unsigned long)((3)*(8000000/4000.0)));
  2314     053C  3008               	movlw	8
  2315     053D  00F1               	movwf	??_LCD_Command+1
  2316     053E  30C9               	movlw	201
  2317     053F  00F0               	movwf	??_LCD_Command
  2318     0540                     u997:
  2319     0540  0BF0               	decfsz	??_LCD_Command,f
  2320     0541  2D40               	goto	u997
  2321     0542  0BF1               	decfsz	??_LCD_Command+1,f
  2322     0543  2D40               	goto	u997
  2323     0544  2D45               	nop2
  2324     0545  0008               	return
  2325     0546                     __end_of_LCD_Command:
  2326     007E                     btemp	set	126	;btemp
  2327     007E                     wtemp0	set	126
  2328                           
  2329                           	psect	config
  2330                           
  2331                           ;Config register CONFIG1 @ 0x2007
  2332                           ;	Oscillator Selection bits
  2333                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2334                           ;	Watchdog Timer Enable bit
  2335                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2336                           ;	Power-up Timer Enable bit
  2337                           ;	PWRTE = OFF, PWRT disabled
  2338                           ;	RE3/MCLR pin function select bit
  2339                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2340                           ;	Code Protection bit
  2341                           ;	CP = OFF, Program memory code protection is disabled
  2342                           ;	Data Code Protection bit
  2343                           ;	CPD = OFF, Data memory code protection is disabled
  2344                           ;	Brown Out Reset Selection bits
  2345                           ;	BOREN = OFF, BOR disabled
  2346                           ;	Internal External Switchover bit
  2347                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2348                           ;	Fail-Safe Clock Monitor Enabled bit
  2349                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2350                           ;	Low Voltage Programming Enable bit
  2351                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2352                           ;	In-Circuit Debugger Mode bit
  2353                           ;	DEBUG = 0x1, unprogrammed default
  2354     2007                     	org	8199
  2355     2007  20D5               	dw	8405
  2356                           
  2357                           ;Config register CONFIG2 @ 0x2008
  2358                           ;	Brown-out Reset Selection bit
  2359                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2360                           ;	Flash Program Memory Self Write Enable bits
  2361                           ;	WRT = OFF, Write protection off
  2362     2008                     	org	8200
  2363     2008  3FFF               	dw	16383

Data Sizes:
    Strings     73
    Constant    8
    Data        16
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     25      52
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[11]), STR_2(CODE[12]), STR_3(CODE[15]), STR_4(CODE[17]), 
		 -> STR_5(CODE[18]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[11]), STR_2(CODE[12]), STR_3(CODE[15]), STR_4(CODE[17]), 
		 -> STR_5(CODE[18]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 8
		 -> pass_user(BANK0[8]), 

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 8
		 -> password(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_blink_led
    _blink_led->_delay_ms_variable
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    2796
                                             19 BANK0      6     6      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                          _blink_led
                      _keypad_getkey
                        _keypad_init
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     3      3     267
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _blink_led                                           11     5      6     871
                                              4 COMMON     8     2      6
                                              0 BANK0      3     3      0
                  _delay_ms_variable
 ---------------------------------------------------------------------------------
 (2) _delay_ms_variable                                    4     2      2     128
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     825
                                              4 COMMON     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     1      0     116
                                              3 COMMON     1     1      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _blink_led
     _delay_ms_variable
   _keypad_getkey
   _keypad_init
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      34       5       65.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      40      12        0.0%
ABS                  0      0      40       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 03 15:09:18 2024

                        pc 0002               ?_LCD_Command 0070                         fsr 0004  
              ?_LCD_String 0070                        u435 0562                        u550 0613  
                      u455 052C                        u535 05C4                        u907 064D  
                      u765 06B6                        u917 066E                        u845 07A9  
                      u927 068F                        u937 04AE                        u857 06CF  
                      u947 055A                        u867 06F6                        u957 0576  
                      u877 072F                        u967 04EF                        u887 07D5  
                      u977 0478                        u897 062D                        u987 0524  
                      u997 0540                        _idx 004B                        fsr0 0004  
                      indf 0000                LCD_Char@dat 0072                       l1100 04CD  
                     l1112 05D2                       l1200 0641                       l1130 05F1  
                     l1122 05E7                       l1210 0650                       l1202 0643  
                     l1116 05D6                       l1108 05CC                       l1220 0661  
                     l1212 0657                       l1204 0645                       l1126 05ED  
                     l1134 05BE                       l1230 0671                       l1222 0663  
                     l1214 0659                       l1310 06FD                       l1072 049F  
                     l1240 0682                       l1232 0678                       l1216 065C  
                     l1224 0665                       l1250 0692                       l1242 0684  
                     l1234 067A                       l1218 065E                       l1260 06A3  
                     l1252 0699                       l1236 067D                       l1244 0686  
                     l1340 074E                       l1166 04BD                       l1262 06A5  
                     l1254 069B                       l1238 067F                       l1190 0630  
                     l1350 077A                       l1326 0712                       l1256 069E  
                     l1264 06A7                       l1192 0637                       l1184 0623  
                     l1336 0727                       l1258 06A0                       l1194 0639  
                     l1282 05AD                       l1338 0736                       l1196 063C  
                     l1284 057D                       l1198 063E                       l1286 05B6  
                     l1278 059C                       l1368 07CD                       STR_1 004F  
                     STR_2 0043                       STR_3 0034                       STR_4 0023  
                     STR_5 0011                       _main 06BC                       btemp 007E  
                     start 0000              _LCD_String_xy 04B4           __end_of_LCD_Char 057C  
         __end_of_LCD_Init 0510                      ?_main 0070                      _ANSEL 0188  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
             ?_keypad_init 0070               main@temp_str 0036                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_strncmp 05B9  
           ?_LCD_String_xy 0074            __initialization 07E5               __end_of_main 07E5  
                   ??_main 0033          __end_of_LCD_Clear 047E        keypad_getkey@letras 0020  
                   _ANSELH 0189           LCD_String_xy@msg 0075           LCD_String_xy@pos 0074  
         LCD_String_xy@row 0076                     _OSCCON 008F           __end_of_password 0011  
      delay_ms_variable@ms 0070                  ??_strncmp 0073                  ?_LCD_Char 0070  
  __end_of__initialization 07FC                  ?_LCD_Init 0070            ??_LCD_String_xy 0076  
           __pcstackCOMMON 0070               __pidataBANK0 047E               ??_LCD_String 0073  
           _OPTION_REGbits 0081                 __pbssBANK0 0049                 ??_LCD_Char 0070  
               ??_LCD_Init 0073         __end_of_LCD_String 04E8                 __pmaintext 06BC  
            _keypad_getkey 060B          _delay_ms_variable 049F         ?_delay_ms_variable 0070  
               __stringtab 0003          __end_of_blink_led 060B        ??_delay_ms_variable 0072  
            LCD_String@msg 0073                    __ptext1 057C                    __ptext2 0462  
                  __ptext3 060B                    __ptext4 05B9                    __ptext5 049F  
                  __ptext6 04B4                    __ptext7 04CC                    __ptext8 0546  
                  __ptext9 04E8             ?_keypad_getkey 0070  __end_of_delay_ms_variable 04B4  
                _LCD_Clear 046E                    main@key 0038                    _strncmp 057C  
     end_of_initialization 07FC             LCD_Command@cmd 0072                  _PORTAbits 0005  
                _PORTCbits 0007                 ?_LCD_Clear 0070              ??_LCD_Command 0070  
          ??_keypad_getkey 0070         keypad_getkey@F1301 0039        start_initialization 07E5  
       keypad_getkey@valor 0030      __end_of_LCD_String_xy 04CC                 init_fetch0 048E  
              __pdataBANK0 0039        __end_of_LCD_Command 0546                  ___latbits 0002  
            __pcstackBANK0 0020                ??_LCD_Clear 0073              ??_keypad_init 0070  
                _blink_led 05B9                  __pstrings 0003      blink_led@elapsed_time 0020  
    LCD_String_xy@location 0077                   ?_strncmp 0070                   _LCD_Char 0546  
                 _LCD_Init 04E8                  _pass_user 004C        __end_of_keypad_init 046E  
               ?_blink_led 0074                _LCD_Command 0510                __stringbase 0008  
       __end_of__stringtab 0009                   __ptext10 046E                   __ptext11 0510  
              _keypad_init 0462                 strncmp@len 0071                   _intentos 0049  
                 _password 0009          blink_led@duration 0078          blink_led@off_time 0076  
              ??_blink_led 007A               blink_led@led 0022                 _LCD_String 04CC  
    __end_of_keypad_getkey 06BC                   init_ram0 0492                  strncmp@s1 0075  
                strncmp@s2 0070                  stringcode 0003           blink_led@on_time 0074  
                 stringdir 0003                   stringtab 0003             keypad_getkey@i 0031  
